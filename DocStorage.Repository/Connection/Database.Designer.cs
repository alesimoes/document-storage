//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DocStorage.Repository.Connection {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Database {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Database() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DocStorage.Repository.Connection.Database", typeof(Database).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP FUNCTION IF EXISTS &quot;add_document_group&quot;;
        ///DROP FUNCTION IF EXISTS &quot;add_document_user&quot;;
        ///DROP FUNCTION IF EXISTS &quot;remove_document_group&quot;;
        ///DROP FUNCTION IF EXISTS &quot;remove_document_user&quot;;
        ///
        ///DROP TYPE IF EXISTS &quot;document_access_info&quot;;
        ///
        ///CREATE TYPE &quot;document_access_info&quot; AS (
        ///    id uuid,
        ///    document_id uuid, 
        ///	group_id uuid,
        ///    user_id uuid,
        ///	message tp_error_types
        ///);
        ///
        ///CREATE OR REPLACE FUNCTION add_document_group(
        ///   document_access_in [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string create_document_access {
            get {
                return ResourceManager.GetString("create_document_access", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP FUNCTION IF EXISTS &quot;insert_document&quot;;
        ///DROP FUNCTION IF EXISTS &quot;get_document_by_id&quot;;
        ///
        ///DROP TYPE IF EXISTS &quot;document_info&quot;;
        ///
        ///CREATE TYPE &quot;document_info&quot; AS (
        ///    id uuid,
        ///    name text,
        ///    description text,
        ///    category text,
        ///	filename text,	
        ///    posted_Date timestamp with time zone,
        ///	message &quot;tp_error_types&quot;
        ///);
        ///
        ///CREATE OR REPLACE FUNCTION insert_document(
        ///    document_info &quot;document_info&quot;,
        ///	current_user_id uuid
        ///) RETURNS &quot;document_info&quot;
        ///AS $$
        ///BEGIN
        ///    CALL authorize(current_use [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string create_documents {
            get {
                return ResourceManager.GetString("create_documents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP FUNCTION IF EXISTS &quot;insert_group&quot;;
        ///DROP FUNCTION IF EXISTS &quot;get_group_by_id&quot;;
        ///DROP FUNCTION IF EXISTS &quot;delete_group&quot;;
        ///DROP FUNCTION IF EXISTS &quot;update_group&quot;;
        ///DROP FUNCTION IF EXISTS &quot;add_user_group&quot;;
        ///DROP FUNCTION IF EXISTS &quot;delete_user_group&quot;;
        ///
        ///DROP TYPE IF EXISTS &quot;group_info&quot;;
        ///DROP TYPE IF EXISTS &quot;user_group_info&quot;;
        ///
        ///CREATE TYPE &quot;group_info&quot; AS (
        ///   Id uuid,
        ///   Name text,
        ///   message tp_error_types
        ///);
        ///
        ///CREATE TYPE &quot;user_group_info&quot; AS (
        ///   Id uuid,
        ///   user_id uuid,
        ///   grou [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string create_group {
            get {
                return ResourceManager.GetString("create_group", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP FUNCTION IF EXISTS &quot;insert_user&quot;;
        ///DROP FUNCTION IF EXISTS &quot;authorize_user&quot;;
        ///DROP FUNCTION IF EXISTS &quot;get_user_by_id&quot;;
        ///DROP FUNCTION IF EXISTS &quot;delete_user&quot;;
        ///DROP FUNCTION IF EXISTS &quot;update_user&quot;;
        ///
        ///DROP TYPE IF EXISTS &quot;user_info&quot;;
        ///
        ///CREATE TYPE &quot;user_info&quot; AS (
        ///   id uuid,
        ///   username text,
        ///   password text,
        ///   role public.user_role,
        ///   message &quot;tp_error_types&quot;
        ///);
        ///
        ///CREATE OR REPLACE FUNCTION insert_user(
        ///    user_info &quot;user_info&quot;,
        ///	current_user_id uuid
        ///) RETURNS user_info
        ///AS $$
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string create_users {
            get {
                return ResourceManager.GetString("create_users", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP FUNCTION IF EXISTS &quot;insert_user&quot;;
        ///DROP FUNCTION IF EXISTS &quot;authorize_user&quot;;
        ///DROP FUNCTION IF EXISTS &quot;get_user_by_id&quot;;
        ///DROP FUNCTION IF EXISTS &quot;delete_user&quot;;
        ///DROP FUNCTION IF EXISTS &quot;update_user&quot;;
        ///
        ///DROP FUNCTION IF EXISTS &quot;insert_document&quot;;
        ///DROP FUNCTION IF EXISTS &quot;get_document_by_id&quot;;
        ///
        ///DROP FUNCTION IF EXISTS &quot;insert_group&quot;;
        ///DROP FUNCTION IF EXISTS &quot;get_group_by_id&quot;;
        ///DROP FUNCTION IF EXISTS &quot;delete_group&quot;;
        ///DROP FUNCTION IF EXISTS &quot;update_group&quot;;
        ///DROP FUNCTION IF EXISTS  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string createstructure {
            get {
                return ResourceManager.GetString("createstructure", resourceCulture);
            }
        }
    }
}
